pavan@LAPTOP-J6SI96OK MINGW64 ~
$ git status
fatal: not a git repository (or any of the parent directories): .git

pavan@LAPTOP-J6SI96OK MINGW64 ~
$ cd ..

pavan@LAPTOP-J6SI96OK MINGW64 /c/Users
$ cd ../..

pavan@LAPTOP-J6SI96OK MINGW64 /
$ cd git
bash: cd: git: No such file or directory

pavan@LAPTOP-J6SI96OK MINGW64 /
$ ls
LICENSE.txt  ReleaseNotes.html  bin/  cmd/  dev/  etc/  git-bash.exe*  git-cmd.exe*  mingw64/  proc/  tmp/  unins000.dat  unins000.exe*  unins000.msg

pavan@LAPTOP-J6SI96OK MINGW64 /
$ cd c

pavan@LAPTOP-J6SI96OK MINGW64 /c
$ cd c:

pavan@LAPTOP-J6SI96OK MINGW64 /c
$ ls
'$GetCurrent'/   '$Windows.~WS'/             Drivers/            OneDriveTemp/           ProgramData/                  Windows/
'$MfeDeepRem'/    Config.Msi/                DumpStack.log.tmp   PerfLogs/               Recovery/                     hiberfil.sys
'$Recycle.Bin'/   Dev-Cpp/                   Git/               'Program Files'/        'System Volume Information'/   pagefile.sys
'$WinREAgent'/   'Documents and Settings'@   Intel/             'Program Files (x86)'/   Users/                        swapfile.sys

pavan@LAPTOP-J6SI96OK MINGW64 /c
$ cd Git/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ ls
LICENSE.txt  ReleaseNotes.html  bin/  cmd/  dev/  etc/  git-bash.exe*  git-cmd.exe*  mingw64/  tmp/  unins000.dat  unins000.exe*  unins000.msg  usr/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ mkdir git-demo

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ cd git-demo/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$ gigit.
bash: gigit.: command not found

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo
$ git init
Initialized empty Git repository in C:/Git/git-demo/.git/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ pwd
/c/Git/git-demo

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ git remote add origin "https://github.com/ramarajupss/tutorial.git"

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ git origin
git: 'origin' is not a git command. See 'git --help'.

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ git pull
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 594 bytes | 74.00 KiB/s, done.
From https://github.com/ramarajupss/tutorial
 * [new branch]      main       -> origin/main
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> master


pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ git init
Reinitialized existing Git repository in C:/Git/git-demo/.git/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/git-demo (master)
$ cd ..

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ ls
LICENSE.txt        bin/  dev/  git-bash.exe*  git-demo/  tmp/          unins000.exe*  usr/
ReleaseNotes.html  cmd/  etc/  git-cmd.exe*   mingw64/   unins000.dat  unins000.msg

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ rm -rf git-demo/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ mkdir demo

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git
$ cd demo/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo
$ ls

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo
$ pwd
/c/Git/demo

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo
$ git init
Initialized empty Git repository in C:/Git/demo/.git/

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ dir /ah
dir: cannot access '/ah': No such file or directory

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ ls

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ dir

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> master


pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git pull origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git status origin
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git remote add origin "https://github.com/ramarajupss/tutorial.git"

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git pull origin master
fatal: couldn't find remote ref master

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git pull origin demo
fatal: couldn't find remote ref demo

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (master)
$ git branch -m master main

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git checkout main
error: pathspec 'main' did not match any file(s) known to git

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git push -u origin main
error: src refspec main does not match any
error: failed to push some refs to 'https://github.com/ramarajupss/tutorial.git'

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git push origin --delete master
info: please complete authentication in your browser...
error: unable to delete 'master': remote ref does not exist
error: failed to push some refs to 'https://github.com/ramarajupss/tutorial.git'

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git remote -v
origin  https://github.com/ramarajupss/tutorial.git (fetch)
origin  https://github.com/ramarajupss/tutorial.git (push)

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git pull origin main
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 594 bytes | 54.00 KiB/s, done.
From https://github.com/ramarajupss/tutorial
 * branch            main       -> FETCH_HEAD
 * [new branch]      main       -> origin/main

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git status
On branch main
nothing to commit, working tree clean

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git status
On branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        edu.txt

nothing added to commit but untracked files present (use "git add" to track)

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git add edu.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   edu.txt


pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git commit -m "first commit in local"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'pavan@LAPTOP-J6SI96OK.(none)')

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git config --global user.email "pavansai2269@gmail.com"

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git config --global user.name "Pavan"

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git commit -m "first commit in local"
[main 30793a1] first commit in local
 1 file changed, 1 insertion(+)
 create mode 100644 edu.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git status
On branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        edu2.txt
        edu3.txt

nothing added to commit but untracked files present (use "git add" to track)

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git add -A

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   edu2.txt
        new file:   edu3.txt


pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git commit -a -m "adding 2 files together"
[main 970a6c7] adding 2 files together
 2 files changed, 2 insertions(+)
 create mode 100644 edu2.txt
 create mode 100644 edu3.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git log
commit 970a6c772068fa0eaef5b5bb949b58bc6370a05c (HEAD -> main)
Author: Pavan <pavansai2269@gmail.com>
Date:   Sat Jun 25 18:43:01 2022 +0530

    adding 2 files together

commit 30793a13f68eab35b0fd2042a6b630358fa39ab3
Author: Pavan <pavansai2269@gmail.com>
Date:   Sat Jun 25 18:16:09 2022 +0530

    first commit in local

commit c36d9bee2e8b8492200ace124fe0b3f0eef3dbc4 (origin/main)
Author: ramarajupss <106017293+ramarajupss@users.noreply.github.com>
Date:   Sun May 22 18:02:05 2022 +0530

    Initial commit

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$
pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git branch firstbranch

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git checkout firstbranch
Switched to branch 'firstbranch'

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git add edu4.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git commit -m "making changes in firstbranch"
[firstbranch 4b47d25] making changes in firstbranch
 1 file changed, 1 insertion(+)
 create mode 100644 edu4.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  edu4.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git checkout master
error: pathspec 'master' did not match any file(s) known to git

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git checkout main
Switched to branch 'main'

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git branch
  firstbranch
* main

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$




pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git merge firstbranch
Updating c6dc354..4b47d25
Fast-forward
 edu4.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 edu4.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  edu4.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git checkout firstbranch
Switched to branch 'firstbranch'
pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ vi edu5.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  edu4.txt  edu5.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ vi edu6.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git add -A
warning: LF will be replaced by CRLF in edu5.txt.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in edu6.txt.
The file will have its original line endings in your working directory

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git commit -a -m "adding for rebasing"
[firstbranch 1bed885] adding for rebasing
 2 files changed, 2 insertions(+)
 create mode 100644 edu5.txt
 create mode 100644 edu6.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git rebase master
fatal: invalid upstream 'master'

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git rebase main
Current branch firstbranch is up to date.

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  edu4.txt  edu5.txt  edu6.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (firstbranch)
$ git checkout main
Switched to branch 'main'

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  edu4.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ git rebase firstbranch
Successfully rebased and updated refs/heads/main.

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$ ls
README.md  edu.txt  edu2.txt  edu3.txt  edu4.txt  edu5.txt  edu6.txt  git-day1.txt

pavan@LAPTOP-J6SI96OK MINGW64 /c/Git/demo (main)
$
